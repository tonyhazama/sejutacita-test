/* eslint-disable react-hooks/exhaustive-deps */
import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router'
import React, { useContext, useEffect, useState } from 'react'
import BackButton from '../../components/back-button';
import BookCard from '../../components/book-card';
import Container from '../../components/container';
import { AppContext } from '../../components/context';
import Layout from '../../components/layout';
import SearchBox from '../../components/search-box';
import { getBooks } from '../../services/books-api';
import { AppAction, AppState } from '../../types/app-state';
import { Book } from '../../types/book';
import Category from '../../types/category';

export default function Books() {
  const [store, dispatch] = useContext<[AppState, (object: AppAction) => void]>(AppContext);
  const [category, setCategory] = useState<Category>();
  const router = useRouter()
  const [books, setBooks] = useState<Book[]>([]);
  const [bookDetail, setBookDetail] = useState<Book>();

  const categoryId: number = parseInt(router.query.categoryId as string, 10);

  useEffect(() => {
    if (store.categories) {
      const cat = store.categories.find(c => c.id === categoryId);
      if (cat) {
        setCategory(cat);
      }
    }
  }, [store.categories]);
  
  useEffect(() => {
    if (categoryId) {
      getBookData(categoryId);
    }
  }, [categoryId]);
  
  const getBookData = async (categoryId: number) => {
    try {
      let [bookData] = await getBooks(categoryId);
      bookData = bookData.map((book: Book) => ({...book, category: category?.name}));
      setBooks(bookData);
    } catch (e) {
      console.error(e);
    }
  };

  const handleBack = () => {
    router.back();
  }

  const handleClickBook = (book: Book) => {
    setBookDetail(book);
  }

  const handleSearch = (keyword: string) => {
    
  }

  return (
    <div>
      <Head>
        <title>Books</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="">
        <Layout>
          <div className="pt-4 pb-8">
            <BackButton onBack={handleBack} title={category?.name} />
            <SearchBox onSearch={handleSearch} />
          </div>
          <div className="grid grid-cols-2 md:grid-cols-6 gap-8">
            {books?.map(book => (
              <BookCard key={book.id} data={book} onClickBook={handleClickBook} />
            ))}
          </div>
        </Layout>
      </main>
    </div>
  )
}
